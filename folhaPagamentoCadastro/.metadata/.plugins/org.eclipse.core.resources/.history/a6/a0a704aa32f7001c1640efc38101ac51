package com.folhaPagamentoCadastro.folhaPagamentoCadastro.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.folhaPagamentoCadastro.folhaPagamentoCadastro.service.FolhaPagamentoService;

@RestController
@RequestMapping(path = "/cadastrar")
public class FolhaPagamentoController {
	
	@Autowired
	FolhaPagamentoService folhaPagamentoService;
	
	@PostMapping("/criar")
    public ResponseEntity<CursoModel> createCurso(@RequestBody @Valid CursoDTO cursoDto) throws ClientProtocolException, IOException {
        CursoModel cursoModel = new CursoModel();
        
        //Converte o DTO (requisição) em model
        //BeanUtils.copyProperties(cursoDto, cursoModel);
        cursoModel = converterCursoDto(cursoDto);
        
        if (cursoService.create(cursoModel).equals(StatusCursoEvento.SUCCESS) ){
        	
        	AlunoService alunoService = new AlunoService();
        	
        	for (AlunoModel aluno : cursoModel.getAlunos()) {
        		if (alunoService.create(aluno).equals(StatusCursoEvento.SUCCESS) ){
        			System.out.println(aluno.getNome() + " Cadastrado");
        		}else {
        			System.out.println(aluno.getNome() + " Não cadastrado"); 
        		}
			}
        	
        	//microsservice pho request 
        	SendEmailMicrosservice(cursoDto);
        	
        	return new ResponseEntity<>(cursoModel, HttpStatus.CREATED);
        	
        }else {
        	return new ResponseEntity<>(cursoModel, HttpStatus.CONFLICT);
        }
        
    }

}
